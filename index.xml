<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>badstreff</title><link>/</link><description>Recent content on badstreff</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 25 Oct 2024 00:00:00 -0600</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>badstreff.com</title><link>/projects/this-blog/</link><pubDate>Fri, 25 Oct 2024 00:00:00 -0600</pubDate><guid>/projects/this-blog/</guid><description>&lt;p>tldr;&lt;/p>
&lt;p>This blog is built using &lt;a href="https://gohugo.io">Hugo&lt;/a> to generate the static content, &lt;a href="https://pages.github.com">Github Pages&lt;/a> for hosting, &lt;a href="https://github.com/features/actions">Github Actions&lt;/a> for continous deployment, and &lt;a href="https://www.cloudflare.com">Cloudflare&lt;/a> for DNS. You can find the source on &lt;a href="https://github.com/badstreff/badstreff.com">my GitHub&lt;/a>.&lt;/p>
&lt;h3 id="hugo">Hugo&lt;/h3>
&lt;p>Nothing really notable here, I needed something that could quickly take markdown content and generate a nice static website and Hugo fit that purpose. There are plenty of others out there but Hugo is written in go and the templating language I am already pretty familiar with. Learning Hugo has been pretty painless, there are lots of youtube vidoes available and the docs they provider are pretty decent.&lt;/p></description></item><item><title>My Nand2Tetris Journey: Lessons and Reflections</title><link>/posts/nand2tetris/</link><pubDate>Sat, 19 Oct 2024 00:00:00 -0600</pubDate><guid>/posts/nand2tetris/</guid><description>&lt;p>Earlier this year, I decided to take on the well-known &lt;a href="https://www.nand2tetris.org/">Nand2Tetris&lt;/a> course, a project that regularly pops up on Hacker News. My goal? To understand how computers work at the lowest level of abstraction I was willing to explore. This course covers everything from the basic NAND gate all the way to building a fully functioning computer, and it promised to be both an exciting and challenging ride. Here&amp;rsquo;s my experience and the lessons I learned along the way.&lt;/p></description></item><item><title>Using Ansible to Template Java .properties Files</title><link>/posts/ansible-java-properties-template/</link><pubDate>Mon, 31 Dec 2018 17:59:13 -0600</pubDate><guid>/posts/ansible-java-properties-template/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This post should teach you some jinja tricks to make templating out the java .properties file format as painless as possible. For those unfamiliar they generally look something like the following example which was taken from the apache commons config guide. You can find more information and the original &lt;a href="https://commons.apache.org/proper/commons-configuration/userguide/howto_properties.html">here&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0f0"># Properties definining the GUI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>colors.background = &lt;span style="color:#87ceeb">#FFFFFF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>colors.foreground = &lt;span style="color:#87ceeb">#000080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window.width = &lt;span style="color:#87ceeb">500&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window.height = &lt;span style="color:#87ceeb">300&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice that they follow a dictionary like structure, if we were to represent
this using yaml it would look something like this.&lt;/p></description></item></channel></rss>